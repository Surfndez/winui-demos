<Page x:Class="syncfusion.radialgaugedemos.winui.Views.GettingStarted"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:syncfusion.radialgaugedemos.winui.Views"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      xmlns:gauge="using:Syncfusion.UI.Xaml.Gauges"
      xmlns:common="using:syncfusion.demoscommon.winui"
      xmlns:coreextension="using:Syncfusion.UI.Xaml.Core.Extensions">

    <ScrollViewer>
        <ScrollViewer.Resources>
            <coreextension:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter" />
        </ScrollViewer.Resources>
        <StackPanel>
            <common:DemoLayout HeaderText="Radial gauge with the inclusion of axis">
                <common:DemoLayout.Example>
                    <Grid>
                        <gauge:SfRadialGauge>
                            <gauge:SfRadialGauge.Axes>
                                <gauge:RadialAxis x:Name="axisGauge"
                                                  Interval="10"
                                                  Minimum="0"
                                                  Maximum="150"
                                                  StartAngle="130"
                                                  EndAngle="50" />
                            </gauge:SfRadialGauge.Axes>
                        </gauge:SfRadialGauge>
                    </Grid>
                </common:DemoLayout.Example>

                <common:DemoLayout.Options>
                    <Grid Width="200">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.6*" />
                            <ColumnDefinition Width="0.4*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Minimum"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="minimumSlider"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="150"
                                StepFrequency="1"
                                Value="{Binding ElementName=axisGauge, Path=Minimum, Mode=TwoWay}" />

                        <TextBlock Text="Maximum"
                                   Grid.Row="2"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="maximumSlider"
                                Grid.Row="3"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="150"
                                StepFrequency="1"
                                Value="{Binding ElementName=axisGauge, Path=Maximum, Mode=TwoWay}" />

                        <TextBlock Text="StartAngle"
                                   Grid.Row="4"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="startAngleSlider"
                                Grid.Row="5"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="360"
                                StepFrequency="1"
                                Value="{Binding ElementName=axisGauge, Path=StartAngle, Mode=TwoWay}" />

                        <TextBlock Text="EndAngle"
                                   Grid.Row="6"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="endAngleSlider"
                                Grid.Row="7"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="360"
                                StepFrequency="1"
                                Value="{Binding ElementName=axisGauge, Path=EndAngle, Mode=TwoWay}" />

                        <TextBlock Text="ShowLabels"
                                   Grid.Row="8" />
                        <CheckBox x:Name="showLabelsCheckBox"
                                  Grid.Row="8"
                                  Grid.Column="1"
                                  IsChecked="{Binding ElementName=axisGauge, Path=ShowLabels, Mode=TwoWay}" />

                        <TextBlock Text="LabelPosition"
                                   Grid.Row="9" />
                        <ComboBox x:Name="labelPositionComboBox"
                                  Grid.Row="9"
                                  Grid.Column="1"
                                  ItemsSource="{coreextension:EnumValuesExtension Type=gauge:LabelsPosition}"
                                  SelectedItem="{Binding ElementName=axisGauge, Path=LabelPosition, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Text="ShowTicks"
                                   Grid.Row="10" />
                        <CheckBox x:Name="showTicksCheckBox"
                                  Grid.Row="10"
                                  Grid.Column="1"
                                  IsChecked="{Binding ElementName=axisGauge, Path=ShowTicks, Mode=TwoWay}" />

                        <TextBlock Text="TickPosition"
                                   Grid.Row="11" />
                        <ComboBox x:Name="tickPositionComboBox"
                                  Grid.Row="11"
                                  Grid.Column="1"
                                  ItemsSource="{coreextension:EnumValuesExtension Type=gauge:TickElementsPosition}"
                                  SelectedItem="{Binding ElementName=axisGauge, Path=TickPosition, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Text="IsInversed"
                                   Grid.Row="12" />
                        <CheckBox x:Name="isInversedCheckBox"
                                  Grid.Row="12"
                                  Grid.Column="1"
                                  IsChecked="{Binding ElementName=axisGauge, Path=IsInversed, Mode=TwoWay}" />
                    </Grid>
                </common:DemoLayout.Options>

                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
&lt;gauge:SfRadialGauge&gt;
       &lt;gauge:RadialAxis Minimum="$(minimum)"
                     Maximum="$(maximum)"
                     StartAngle="$(startAngle)"
                     EndAngle="$(endAngle)"
                     LabelPosition="$(labelPosition)"
                     TickPosition="$(tickPosition)"
                     ShowLabels="$(showLabels)"
                     ShowTicks="$(showTicks)"
                     IsInversed="$(isInversed)" /&gt;
&lt;/gauge:SfRadialGauge&gt;
                        </x:String>
                </common:DemoLayout.Xaml>

                <common:DemoLayout.Substitutions>
                    <common:DemoLayoutSubstitution Key="minimum"
                                                   SubstitutionValue="{x:Bind minimumSlider.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="maximum"
                                                   SubstitutionValue="{x:Bind maximumSlider.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="startAngle"
                                                   SubstitutionValue="{x:Bind startAngleSlider.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="endAngle"
                                                   SubstitutionValue="{x:Bind endAngleSlider.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="labelPosition"
                                                   SubstitutionValue="{x:Bind labelPositionComboBox.SelectedItem, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="tickPosition"
                                                   SubstitutionValue="{x:Bind tickPositionComboBox.SelectedItem, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="showLabels"
                                                   SubstitutionValue="{x:Bind showLabelsCheckBox.IsChecked, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="showTicks"
                                                   SubstitutionValue="{x:Bind showTicksCheckBox.IsChecked, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="isInversed"
                                                   SubstitutionValue="{x:Bind isInversedCheckBox.IsChecked, Mode=OneWay}" />
                </common:DemoLayout.Substitutions>
            </common:DemoLayout>

            <common:DemoLayout HeaderText="Radial gauge with the inclusion of range">
                <common:DemoLayout.Example>
                    <Grid>
                        <gauge:SfRadialGauge>
                            <gauge:SfRadialGauge.Axes>
                                <gauge:RadialAxis Maximum="150"
                                                  Interval="10">
                                    <gauge:RadialAxis.Ranges>
                                        <gauge:GaugeRange x:Name="range1"
                                                          StartValue="0"
                                                          EndValue="50"
                                                          Background="Red" />
                                        <gauge:GaugeRange x:Name="range2"
                                                          StartValue="50"
                                                          EndValue="100"
                                                          Background="Orange" />
                                        <gauge:GaugeRange x:Name="range3"
                                                          StartValue="100"
                                                          EndValue="150"
                                                          Background="Green" />
                                    </gauge:RadialAxis.Ranges>
                                </gauge:RadialAxis>
                            </gauge:SfRadialGauge.Axes>
                        </gauge:SfRadialGauge>
                    </Grid>
                </common:DemoLayout.Example>
                <common:DemoLayout.Options>
                    <Grid Width="200">
                        <Grid.Resources>
                            <Style TargetType="ColorPicker">
                                <Setter Property="Height"
                                        Value="50" />
                                <Setter Property="IsHexInputVisible"
                                        Value="False" />
                                <Setter Property="IsAlphaSliderVisible"
                                        Value="False" />
                                <Setter Property="IsAlphaTextInputVisible"
                                        Value="False" />
                                <Setter Property="IsColorPreviewVisible"
                                        Value="False" />
                                <Setter Property="IsColorChannelTextInputVisible"
                                        Value="False" />
                                <Setter Property="IsColorSliderVisible"
                                        Value="False" />
                                <Setter Property="IsColorSpectrumVisible"
                                        Value="True" />
                                <Setter Property="IsMoreButtonVisible"
                                        Value="False" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="1st range background" />
                        <ColorPicker x:Name="range1ColorPicker"
                                     Grid.Row="1"
                                     Color="{Binding ElementName=range1, Path=Background.Color, Mode=TwoWay}" />

                        <TextBlock Text="2nd range background"
                                   Grid.Row="2" />
                        <ColorPicker x:Name="range2ColorPicker"
                                     Grid.Row="3"
                                     Color="{Binding ElementName=range2, Path=Background.Color, Mode=TwoWay}" />

                        <TextBlock Text="3rd range background"
                                   Grid.Row="4" />
                        <ColorPicker x:Name="range3ColorPicker"
                                     Grid.Row="5"
                                     Color="{Binding ElementName=range3, Path=Background.Color, Mode=TwoWay}" />
                    </Grid>
                </common:DemoLayout.Options>

                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
&lt;gauge:GaugeRange x:Name="range1"
                     StartValue="0"
                     EndValue="50"
                     Background="$(range1Background)" /&gt;
&lt;gauge:GaugeRange x:Name="range2"
                     StartValue="50"
                     EndValue="100"
                     Background="$(range2Background)" /&gt;
&lt;gauge:GaugeRange x:Name="range3"
                     StartValue="100"
                     EndValue="150"
                     Background="$(range3Background)" /&gt;
                    </x:String>
                </common:DemoLayout.Xaml>

                <common:DemoLayout.Substitutions>
                    <common:DemoLayoutSubstitution Key="range1Background"
                                                   SubstitutionValue="{x:Bind range1ColorPicker.Color, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="range2Background"
                                                   SubstitutionValue="{x:Bind range2ColorPicker.Color, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="range3Background"
                                                   SubstitutionValue="{x:Bind range3ColorPicker.Color, Mode=OneWay}" />
                </common:DemoLayout.Substitutions>
            </common:DemoLayout>

            <common:DemoLayout HeaderText="Radial gauge with the inclusion of pointer">
                <common:DemoLayout.Example>
                    <Grid>
                        <gauge:SfRadialGauge>
                            <gauge:SfRadialGauge.Axes>
                                <gauge:RadialAxis Maximum="150"
                                                  Interval="10">
                                    
                                    <gauge:RadialAxis.Ranges>
                                        <gauge:GaugeRange StartValue="0"
                                                          EndValue="50"
                                                          Background="Red" />
                                        <gauge:GaugeRange StartValue="50"
                                                          EndValue="100"
                                                          Background="Orange" />
                                        <gauge:GaugeRange StartValue="100"
                                                          EndValue="150"
                                                          Background="Green" />
                                    </gauge:RadialAxis.Ranges>
                                    
                                    <gauge:RadialAxis.Pointers>
                                        <gauge:NeedlePointer x:Name="needlePointer" Value="90" EnableAnimation="True" />
                                    </gauge:RadialAxis.Pointers>
                                </gauge:RadialAxis>
                            </gauge:SfRadialGauge.Axes>
                        </gauge:SfRadialGauge>
                    </Grid>
                </common:DemoLayout.Example>

                <common:DemoLayout.Options>
                    <Grid Width="200">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.6*" />
                            <ColumnDefinition Width="0.4*" />
                        </Grid.ColumnDefinitions>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <TextBlock Text="Value" />
                        <Slider x:Name="needleValueSlider"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="150"
                                Value="{Binding ElementName=needlePointer, Path=Value, Mode=TwoWay}"></Slider>
                    </Grid>
                </common:DemoLayout.Options>

                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
&lt;gauge:RadialAxis.Pointers>
    &lt;gauge:NeedlePointer x:Name="needlePointer"
                            Value="$(needleValue)"
                            EnableAnimation="True" /&gt;
&lt;/gauge:RadialAxis.Pointers &gt;
                    </x:String>
                </common:DemoLayout.Xaml>
                
                <common:DemoLayout.Substitutions>
                    <common:DemoLayoutSubstitution Key="needleValue"
                                                   SubstitutionValue="{x:Bind needleValueSlider.Value, Mode=OneWay}"/>
                </common:DemoLayout.Substitutions>
            </common:DemoLayout>

            <common:DemoLayout HeaderText="Radial gauge with the inclusion of annotation">
                <common:DemoLayout.Example>
                    <Grid>
                        <gauge:SfRadialGauge>
                            <gauge:SfRadialGauge.Axes>
                                <gauge:RadialAxis Maximum="150"
                                                  Interval="10">

                                    <gauge:RadialAxis.Ranges>
                                        <gauge:GaugeRange StartValue="0"
                                                          EndValue="50"
                                                          Background="Red" />
                                        <gauge:GaugeRange StartValue="50"
                                                          EndValue="100"
                                                          Background="Orange" />
                                        <gauge:GaugeRange StartValue="100"
                                                          EndValue="150"
                                                          Background="Green" />
                                    </gauge:RadialAxis.Ranges>

                                    <gauge:RadialAxis.Pointers>
                                        <gauge:NeedlePointer x:Name="needlePointer1" Value="90" EnableAnimation="True" />
                                    </gauge:RadialAxis.Pointers>

                                    <gauge:RadialAxis.Annotations>
                                        <gauge:GaugeAnnotation x:Name="annotation"
                                                               DirectionUnit="Angle"
                                                               DirectionValue="90"
                                                               PositionFactor="0.5">
                                            <gauge:GaugeAnnotation.ContentTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <TextBlock Text="{Binding ElementName=needlePointer1, Path=Value, Mode=OneWay}"
                                                                   FontSize="25"
                                                                   FontWeight="Bold" />
                                                    </Grid>
                                                </DataTemplate>
                                            </gauge:GaugeAnnotation.ContentTemplate>
                                        </gauge:GaugeAnnotation>
                                    </gauge:RadialAxis.Annotations>
                                </gauge:RadialAxis>
                            </gauge:SfRadialGauge.Axes>
                        </gauge:SfRadialGauge>
                    </Grid>
                </common:DemoLayout.Example>

                <common:DemoLayout.Options>
                    <Grid Width="200">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.6*" />
                            <ColumnDefinition Width="0.4*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Value" />
                        <Slider x:Name="needleValueSlider1"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="150"
                                Value="{Binding ElementName=needlePointer1, Path=Value, Mode=TwoWay}" />

                        <TextBlock Text="DirectionUnit"
                                   Grid.Row="2" />
                        <ComboBox x:Name="directionUnitComboBox"
                                  Grid.Row="2"
                                  Grid.Column="1"
                                  ItemsSource="{coreextension:EnumValuesExtension Type=gauge:AnnotationDirection}"
                                  SelectedItem="{Binding ElementName=annotation, Path=DirectionUnit, Mode=TwoWay}"
                                  SelectionChanged="ComboBox_SelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource EnumDisplayNameConverter}}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <TextBlock Text="DirectionValue"
                                   Grid.Row="3"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="directionValueSlider"
                                Grid.Row="4"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="360"
                                StepFrequency="1"
                                Value="{Binding ElementName=annotation, Path=DirectionValue, Mode=TwoWay}" />

                        <TextBlock Text="PositionFactor"
                                   Grid.Row="5"
                                   Grid.ColumnSpan="2" />
                        <Slider x:Name="annotationPositionFactor"
                                Grid.Row="6"
                                Grid.ColumnSpan="2"
                                Minimum="0"
                                Maximum="1"
                                StepFrequency="0.1"
                                Value="{Binding ElementName=annotation, Path=PositionFactor, Mode=TwoWay}"/>
                    </Grid>
                </common:DemoLayout.Options>

                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
&lt;gauge:RadialAxis.Annotations&gt;
    &lt;gauge:GaugeAnnotation x:Name="annotation"
                              DirectionValue="$(directionValue)"
                              DirectionUnit="$(directionUnit)"
                              PositionFactor="$(PositionFactor)" /&gt;
        &lt;gauge:GaugeAnnotation.ContentTemplate>
            &lt;DataTemplate&gt;
                &lt;Grid&gt;
                    &lt;TextBlock Text="$(needleValue1)" 
                                FontSize="25"
                                FontWeight="Bold" /&gt;
                &lt;/Grid&gt;
            &lt;/DataTemplate&gt;
        &lt;/gauge:GaugeAnnotation.ContentTemplate&gt;
&lt;/gauge:RadialAxis.Annotations&gt;
                    </x:String>
                </common:DemoLayout.Xaml>

                <common:DemoLayout.Substitutions>
                    <common:DemoLayoutSubstitution Key="PositionFactor"
                                                   SubstitutionValue="{x:Bind annotationPositionFactor.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="needleValue1"
                                                   SubstitutionValue="{x:Bind needleValueSlider1.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="directionValue"
                                                   SubstitutionValue="{x:Bind directionValueSlider.Value, Mode=OneWay}" />
                    <common:DemoLayoutSubstitution Key="directionUnit"
                                                   SubstitutionValue="{x:Bind directionUnitComboBox.SelectedItem, Mode=OneWay}" />
                </common:DemoLayout.Substitutions>
            </common:DemoLayout>
        </StackPanel>
    </ScrollViewer>
</Page>